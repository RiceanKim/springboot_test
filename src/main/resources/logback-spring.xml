<configuration scan="true" scanPeriod="10 seconds">
	<!-- 日志文件存放目录 -->
	<property name="log.base" value="../mplogs/" />

	<appender name="INFOFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.base}/info/mylog-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<!-- 保存指定天数的历史日志 -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>50 MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<pattern>%-20(%d{yyy-MM-dd HH:mm:ss.SSS} [%X{requestId}]) %-5level - %logger{80} - [%line] - %msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>

		<prudent>true</prudent>
	</appender>

	<appender name="WARNFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily 配置日志所生成的目录以及生成文件名的规则 -->
			<fileNamePattern>${log.base}/warn/mylog-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<!-- 保存指定天数的历史日志 -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- or whenever the file size reaches 64 MB -->
				<maxFileSize>50 MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<pattern>%-20(%d{yyy-MM-dd HH:mm:ss.SSS} [%X{requestId}]) %-5level - %logger{80} - [%line] - %msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>

		<prudent>true</prudent>
	</appender>

	<appender name="ERRORFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<pattern>%-20(%d{yyy-MM-dd HH:mm:ss.SSS} [%X{requestId}]) %-5level - %logger{80} - [%line] - %msg%n</pattern>
		</encoder>

		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily 配置日志所生成的目录以及生成文件名的规则 -->
			<fileNamePattern>${log.base}/error/mylog-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<!-- 保存指定天数的历史日志 -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- or whenever the file size reaches 64 MB -->
				<maxFileSize>50 MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>

		<prudent>true</prudent>
	</appender>

	<!-- Console output -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%-20(%d{yyy-MM-dd HH:mm:ss.SSS} [%X{requestId}]) %-5level - %logger{80} - [%line] - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- sql输出到文件 <appender name="SQL_FILEOUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        <fileNamePattern>${log.base}/sql-%d{yyyy-MM-dd}-%i.txt </fileNamePattern>
        <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <maxFileSize>10MB</maxFileSize> </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy> <encoder> <pattern>%date - %msg%n </pattern> </encoder>
        </appender> -->
	<!--<appender name="SLOW_SQL_FILEOUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.base}/db/slow_sql-%d{yyyy-MM-dd}-%i.txt
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%-20(%d{yyy-MM-dd HH:mm:ss.SSS} [%X{requestId}]) %-5level - %logger{80} - %msg%n</pattern>
        </encoder>
    </appender>-->

	<!--<appender name="MYBATIS_SQL_FILEOUT"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.base}/db/mybatis-sql-%d{yyyy-MM-dd}-%i.txt
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ly.mp.iov.tables.scan.utils.LogLayout" />
        </encoder>
    </appender>-->

	<logger name="com.alibaba.druid.filter.stat.StatFilter" level="error" additivity="false">
		<!--        <appender-ref ref="SLOW_SQL_FILEOUT" />-->
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="org.springframework" level="error" additivity="false">
		<!--        <appender-ref ref="SLOW_SQL_FILEOUT" />-->
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="com.ly.mp.dal" level="error" additivity="false">
		<appender-ref ref="ERRORFILE" />
	</logger>


	<!-- Enable FILE and STDOUT appenders for all log messages. By default,
        only log at level INFO and above. -->
	<root level="info">
		<appender-ref ref="INFOFILE" />
		<appender-ref ref="WARNFILE" />
		<appender-ref ref="ERRORFILE" />
		<appender-ref ref="STDOUT" />
	</root>


</configuration>  